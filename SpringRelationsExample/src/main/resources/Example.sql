-- Database: postgres
-- Данныйе запросы приведены в качестве примеров.
-- При указании в настройке hibernate.hbm2ddl.auto значения create или update БД будет создана автоматически
-- Создать таблицу users
CREATE TABLE users(
                      id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                      first_name VARCHAR(100) NOT NULL CHECK (first_name <> ''),
                      last_name VARCHAR(100) NOT NULL CHECK (last_name <> ''),
                      birth_date DATE,
                      email VARCHAR(50)
);
-- Добавить записи в таблицу users
INSERT INTO users (first_name, last_name, birth_date, email) values ('Joel', 'Edgerton', '1974-06-23', NULL);
INSERT INTO users (first_name, last_name, birth_date, email) values ('Tom', 'Hardy', '1979-09-15', 'joelEd@gmail.com');
INSERT INTO users (first_name, last_name, birth_date, email) values ('Nicholas', 'Nolte', '1941-02-08', NULL);

-- Создать client_app_statistics (статистика, с какого клиентского приложения был зарегистрирован пользователь)
CREATE TABLE client_app_statistics(
                                      id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                                      client_app_name VARCHAR(100) NOT NULL CHECK (client_app_name <> ''),
                                      client_app_count INT NOT NULL
);
--  Создать запись статистики
INSERT INTO client_app_statistics (client_app_name, client_app_count) values ('Chrome browser', 10);
--  Обновить запись статистики, увеличив количество на 1
UPDATE client_app_statistics SET client_app_count = client_app_count + 1 WHERE client_app_name = 'Chrome browser';

-- Создать user_details - таблицу дополнительных данных о пользователе. Связь один к одному. PK сопадает с PK users
CREATE TABLE user_details(
    phone VARCHAR(100),
    user_id BIGINT NOT NULL,
    CONSTRAINT user_details_pkey PRIMARY KEY (user_id),
    CONSTRAINT fk_user_details_to_user FOREIGN KEY (user_id)
        REFERENCES users (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);
--  Создать запись в user_details
INSERT INTO user_details (user_id, phone) values (1, '+19138447979');
INSERT INTO user_details (user_id, phone) values (3, '+35152921515');

--  Создать таблицу данных о регистрации
CREATE TABLE registrations(
                             registration_date DATE,
                             confirmation_method VARCHAR(50),
                             user_id BIGINT NOT NULL,
                             CONSTRAINT registration_pkey PRIMARY KEY (user_id),
                             CONSTRAINT fk_registrations_to_user FOREIGN KEY (user_id)
                                 REFERENCES users (id) MATCH SIMPLE
                                 ON UPDATE NO ACTION
                                 ON DELETE NO ACTION
);
--  Заполнить данные о регистрации
INSERT INTO registrations (user_id, registration_date, confirmation_method) values (1, '2024-02-22', 'EMAIL');
INSERT INTO registrations (user_id, registration_date, confirmation_method) values (2, '2023-01-11', 'GOOGLE_ACCOUNT');
INSERT INTO registrations (user_id, registration_date, confirmation_method) values (3, '2022-12-12', 'PHONE');
